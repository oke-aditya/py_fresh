name: Install Package

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  pkg-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Create package
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel
          python setup.py sdist bdist_wheel
      - name: Check package
        run: |
          pip install twine==1.13.0
          twine check dist/*
          python setup.py clean

  pkg-install:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create and Install package on Ubuntu
        if: runner.os == 'Linux'
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel
          python setup.py bdist_wheel
          pip install virtualenv
          virtualenv vEnv ; source vEnv/bin/activate
          pip install dist/*
          cd .. & python
          deactivate ; rm -rf vEnv

      - name: Install package on Mac
        if: runner.os == 'macOS'
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel
          python setup.py bdist_wheel
          pip install virtualenv
          virtualenv vEnv ; source vEnv/bin/activate
          pip install dist/*
          cd .. & python
          deactivate ; rm -rf vEnv

      - name: Install package on Windows
        if: runner.os == 'windows'
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel
          python setup.py bdist_wheel
          pip install virtualenv
          virtualenv vEnv ; venv\Scripts\activate.bat
          cd .. & python
          venv\Scripts\deactivate.bat ; rm -r vEnv
# pip install dist/* Isn't working on windows, need a workaround.
